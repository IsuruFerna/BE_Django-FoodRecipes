name: Testing
on: push

jobs:
   build:
      runs-on: ubuntu-latest

      # run sequentially
      strategy:
         max-parallel: 1
         matrix:
            python-version: [3.12]

      steps:
         - uses: actions/checkout@v4
         - name: Set up Python ${{ matrix.python-version }}
           uses: actions/setup-python@v3
           with:
              python-version: ${{ matrix.python-version }}

         - name: Install dependencies
           run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v2

         - name: Install docker compose
           run: |
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose

         - name: build docker compose
           run: |
              docker-compose up --build -d
           env:
              SECRET_KEY: ${{ secrets.SECRET_KEY }}
              POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
              POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

         - name: Check Docker Compose logs db
           run: |
              docker-compose logs my_postgres

         - name: Check Docker Compose logs web
           run: |
              docker-compose logs web

         - name: Check container status
           run: |
              docker-compose ps
              docker-compose exec -T my_postgres pg_isready -U $POSTGRES_USER -d $POSTGRES_DB || echo "Postgres is not ready"

         - name: Run Django unit tests
           run: |
              docker-compose run web python manage.py makemigrations
              docker-compose run web python manage.py migrate
              docker-compose run web python manage.py test
           env:
              SECRET_KEY: ${{ secrets.SECRET_KEY }}
              POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
              POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
