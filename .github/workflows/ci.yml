name: Testing
on: push

jobs:
   test_project:
      runs-on: ubuntu-latest
      env:
         SECRET_KEY: "${{ secrets.SECRET_KEY }}"
         POSTGRES_DB: "${{ secrets.POSTGRES_NAME }}"
         POSTGRES_NAME: "${{ secrets.POSTGRES_NAME }}"
         POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
         POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
         POSTGRES_HOST: "${{ secrets.POSTGRES_HOST }}"
         POSTGRES_PORT: "${{ secrets.POSTGRES_PORT }}"

      steps:
         - uses: actions/checkout@v4

         - name: Set up Python
           uses: actions/setup-python@v2
           with:
              python-version: "3.12"

         - name: Install dependencies
           run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt

         - name: Install docker compose
           run: |
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose

         - name: Run docker compose
           run: |
              docker-compose up -d
           env:
              SECRET_KEY: "${{ secrets.SECRET_KEY }}"
              POSTGRES_DB: "${{ secrets.POSTGRES_NAME }}"
              POSTGRES_USER: "${{ secrets.POSTGRES_USER }}"
              POSTGRES_PASSWORD: "${{ secrets.POSTGRES_PASSWORD }}"
              POSTGRES_HOST: "${{ secrets.POSTGRES_HOST }}"
              POSTGRES_PORT: "${{ secrets.POSTGRES_PORT }}"
              POSTGRES_NAME: "${{ secrets.POSTGRES_NAME }}"

         - name: Wait for Postgres to be ready
           run: |
              until docker-compose exec -T my_postgres pg_isready; do sleep 1; done

         - name: Check Docker Compose logs
           run: docker-compose logs

         - name: Run Django unit tests
           run: |
              python3 manage.py test
